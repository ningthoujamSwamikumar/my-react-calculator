{"version":3,"sources":["components/buttons.jsx","components/displayArea.jsx","App.js","components/calculate.js","reportWebVitals.js","index.js"],"names":["Buttons","props","clickHandler","event","clickedButtonType","target","name","clickedButton","innerHTML","onOpInput","onNumInput","onDelInput","className","onClick","DisplayArea","value","input1","input23","output","App","useState","opnd1","setOpnd1","op","setOp","opnd2","setOpnd2","result","setResult","takeNumInput","input","prevValue","console","log","num1","num2","Number","calculate","slice","String","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8b9cb6e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Buttons(props) {\r\n  function clickHandler(event) {\r\n    const clickedButtonType = event.target.name;\r\n    const clickedButton = event.target.innerHTML;\r\n    if (clickedButtonType === \"operator\") {\r\n      props.onOpInput(clickedButton);\r\n    } else if (clickedButtonType === \"operand\") {\r\n      props.onNumInput(clickedButton);\r\n    } else if (clickedButtonType === \"delOperator\") {\r\n      props.onDelInput(clickedButton);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"inner-div-btn\">\r\n        <button\r\n          name=\"delOperator\"\r\n          onClick={clickHandler}\r\n          className=\"functionBtn\"\r\n        >\r\n          AC\r\n        </button>\r\n        <button\r\n          name=\"delOperator\"\r\n          onClick={clickHandler}\r\n          className=\"functionBtn\"\r\n        >\r\n          DEL\r\n        </button>\r\n        <button name=\"operator\" onClick={clickHandler} className=\"functionBtn\">\r\n          +\r\n        </button>\r\n        <button name=\"operator\" onClick={clickHandler} className=\"functionBtn\">\r\n          -\r\n        </button>\r\n      </div>\r\n      <div className=\"inner-div-btn\">\r\n        <button name=\"operand\" onClick={clickHandler}>\r\n          7\r\n        </button>\r\n        <button name=\"operand\" onClick={clickHandler}>\r\n          8\r\n        </button>\r\n        <button name=\"operand\" onClick={clickHandler}>\r\n          9\r\n        </button>\r\n        <button name=\"operator\" onClick={clickHandler} className=\"functionBtn\">\r\n          *\r\n        </button>\r\n      </div>\r\n      <div className=\"inner-div-btn\">\r\n        <button name=\"operand\" onClick={clickHandler}>\r\n          4\r\n        </button>\r\n        <button name=\"operand\" onClick={clickHandler}>\r\n          5\r\n        </button>\r\n        <button name=\"operand\" onClick={clickHandler}>\r\n          6\r\n        </button>\r\n        <button name=\"operator\" onClick={clickHandler} className=\"functionBtn\">\r\n          /\r\n        </button>\r\n      </div>\r\n      <div className=\"inner-div-btn\">\r\n        <button name=\"operand\" onClick={clickHandler}>\r\n          1\r\n        </button>\r\n        <button name=\"operand\" onClick={clickHandler}>\r\n          2\r\n        </button>\r\n        <button name=\"operand\" onClick={clickHandler}>\r\n          3\r\n        </button>\r\n        <button name=\"operator\" onClick={clickHandler} className=\"functionBtn\">\r\n          %\r\n        </button>\r\n      </div>\r\n      <div className=\"inner-div-btn\">\r\n        <button name=\"operand\" onClick={clickHandler}>\r\n          0\r\n        </button>\r\n        <button name=\"operand\" onClick={clickHandler}>\r\n          .\r\n        </button>\r\n        <button\r\n          name=\"operator\"\r\n          onClick={clickHandler}\r\n          className=\"equalToBtn functionBtn\"\r\n        >\r\n          =\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function DisplayArea(props) {\r\n  return (\r\n    <div className=\"display\">\r\n      <div name=\"opnd1\" value={props.input1} className=\"innerDisplay\">\r\n        {props.input1}\r\n      </div>\r\n      <div name=\"opAndOpnd2\" value={props.input23} className=\"innerDisplay\">\r\n        {props.input23[0]} {props.input23[1]}\r\n      </div>\r\n      <div name=\"result\" value={props.output} className=\"innerDisplay\">\r\n        {props.output !== \"\" && \"=\"} {props.output}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport Buttons from \"./components/buttons\";\nimport DisplayArea from \"./components/displayArea\";\nimport calculate from \"./components/calculate\";\n\nexport default function App() {\n  const [opnd1, setOpnd1] = useState(\"\");\n  const [op, setOp] = useState(\"\");\n  const [opnd2, setOpnd2] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  function takeNumInput(input) {\n    if (op === \"\") {\n      setOpnd1((prevValue) => {\n        return prevValue + input;\n      });\n    } else if (op !== \"\") {\n      setOpnd2((prevValue) => {\n        return prevValue + input;\n      });\n    } else {\n      console.log(\"!error in takeNumInput in App.js\");\n    }\n  }\n\n  function takeOpInput(input) {\n    if (opnd1 === \"\") {\n      input === \"-\" && takeNumInput(input);\n    } else if (op === \"\") {\n      setOp(() => {\n        return input === \"*\" ? \"x\" : input;\n      });\n    } else if (input === \"=\") {\n      setResult(() => {\n        return calculate(opnd1, op, opnd2);\n      });\n    }\n  }\n\n  function delInput(input) {\n    if (input === \"AC\") {\n      setOpnd1(\"\");\n      setOp(\"\");\n      setOpnd2(\"\");\n      setResult(\"\");\n    } else if (input === \"DEL\") {\n      if (op === \"\") {\n        setOpnd1((prevValue) => {\n          return prevValue.slice(0, -1);\n        });\n      } else if (opnd2 === \"\") {\n        setOp(\"\");\n      } else if (result === \"\") {\n        setOpnd2((prevValue) => {\n          return prevValue.slice(0, -1);\n        });\n      } else {\n        setResult((prevValue) => {\n          return String(prevValue).slice(0, -1);\n        });\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"setMargin\"></div>\n      <DisplayArea input1={opnd1} input23={[op, opnd2]} output={result} />\n      <Buttons\n        onNumInput={takeNumInput}\n        onOpInput={takeOpInput}\n        onDelInput={delInput}\n      />\n    </div>\n  );\n}\n","export default function calculate(num1, op, num2) {\r\n  num1 = Number(num1);\r\n  num2 = Number(num2);\r\n  switch (op) {\r\n    case \"+\":\r\n      return num1 + num2;\r\n    case \"-\":\r\n      return num1 - num2;\r\n    case \"x\":\r\n      return num1 * num2;\r\n    case \"/\":\r\n      return num1 / num2;\r\n    case \"%\":\r\n      return num1 % num2;\r\n    default:\r\n      console.log(\"!invalid input in calculate\");\r\n      return \"!\";\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}